<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <%- include('style'); -%>
</head>

<body>

  <h2>Autocomplete</h2>

  <form autocomplete="off">
    <div class="autocomplete" style="width:300px;">
      <input id="myInput" type="text" name="myCountry">
    </div>
    <input type="submit">
  </form>

  <script>
    // Takes input field and list of doll names as arguments
    function autocomplete(input, array) {
      var currentFocus;
      // Executes below every time text field value changes
      input.addEventListener("input", function (e) {
        let val = this.value;
        console.log("j");
        // Closes any existing autocompleteLists
        closeAllLists();
        if (!val) {
          return false;
        }
        currentFocus = -1;
        // Creates a div that will contain all autocomplete items
        let autocompleteList = document.createElement("DIV");
        autocompleteList.setAttribute("id", this.id + "autocomplete-list");
        autocompleteList.setAttribute("class", "autocomplete-items");
        // Appends div as child of autocomplete container div
        this.parentNode.appendChild(autocompleteList);
        /*for each item in the array...*/
        array.forEach(name => {
          if (name.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
            let autocompleteItem = document.createElement("DIV");
            // Make the matching letters bold
            autocompleteItem.innerHTML = "<strong>" + name.substr(0, val.length) + "</strong>";
            autocompleteItem.innerHTML += name.substr(val.length);
          }
        });
        for (i = 0; i < array.length; i++) {
          /*check if the item starts with the same letters as the text field value:*/
           {
            /*insert a input field that will hold the current array item's value:*/
            b.innerHTML += "<input type='hidden' value='" + array[i] + "'>";
            /*execute a function when someone clicks on the item value (DIV element):*/
            b.addEventListener("click", function (e) {
              /*insert the value for the autocomplete text field:*/
              input.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
            });
            autocompleteList.appendChild(b);
          }
        }
      });
      /*execute a function presses a key on the keyboard:*/
      input.addEventListener("keydown", function (e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
          /*If the arrow DOWN key is pressed,
          increase the currentFocus variable:*/
          currentFocus++;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 38) { //up
          /*If the arrow UP key is pressed,
          decrease the currentFocus variable:*/
          currentFocus--;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 13) {
          /*If the ENTER key is pressed, prevent the form from being submitted,*/
          e.preventDefault();
          if (currentFocus > -1) {
            /*and simulate a click on the "active" item:*/
            if (x) x[currentFocus].click();
          }
        }
      });

      function addActive(x) {
        /*a function to classify an item as "active":*/
        if (!x) return false;
        /*start by removing the "active" class on all items:*/
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        /*add class "autocomplete-active":*/
        x[currentFocus].classList.add("autocomplete-active");
      }

      function removeActive(x) {
        /*a function to remove the "active" class from all autocomplete items:*/
        for (var i = 0; i < x.length; i++) {
          x[i].classList.remove("autocomplete-active");
        }
      }
      /*close all autocomplete lists in the document,
      except the one passed as an argument:*/
      function closeAllLists(elmnt) {
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) {
          if (elmnt != x[i] && elmnt != input) {
            x[i].parentNode.removeChild(x[i]);
          }
        }
      }
      /*execute a function when someone clicks in the document:*/
      document.addEventListener("click", function (e) {
        closeAllLists(e.target);
      });
    }
    var names = <%- JSON.stringify(names) %>;
    console.log(names); 
    /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
    autocomplete(document.getElementById("myInput"), names);
  </script>

</body>

</html>